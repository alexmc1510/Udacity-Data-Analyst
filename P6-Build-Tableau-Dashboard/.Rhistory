x = "Country") +
coord_flip() +
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, vjust = 0.5))
ghg_complete %>%
filter(!Country == "World") %>%
group_by(Country) %>%
summarise(Emissions = sum(Emissions, na.rm = TRUE)) %>%
arrange(desc(Emissions)) %>%
do(head(.,50)) %>%
ggplot(aes(x = Country,
y = Emissions)) +
geom_bar(stat = "identity") +
labs(title = "Cumulative greenhouse gas emissions \nbetween the years 1970 - 2005 by Country",
x = "Country") +
coord_flip() +
theme_bw() +
theme(axis.text.x=element_text(angle = 45, vjust = 0.5))
ghg_complete %>%
filter(!Country == "World") %>%
group_by(Country) %>%
summarise(Emissions = sum(Emissions, na.rm = TRUE)) %>%
arrange(desc(Emissions)) %>%
do(head(.,50)) %>%
ggplot(aes(x = reorder(Country, -Emissions),
y = Emissions)) +
geom_bar(stat = "identity") +
labs(title = "Cumulative greenhouse gas emissions \nbetween the years 1970 - 2005 by Country",
x = "Country") +
coord_flip() +
theme_bw() +
theme(axis.text.x=element_text(angle = 45, vjust = 0.5))
ghg_complete %>%
filter(!Country == "World") %>%
group_by(Country) %>%
summarise(Emissions = sum(Emissions, na.rm = TRUE)) %>%
arrange(desc(Emissions)) %>%
do(head(.,50)) %>%
ggplot(aes(x = reorder(Country, Emissions),
y = Emissions)) +
geom_bar(stat = "identity") +
labs(title = "Cumulative greenhouse gas emissions \nbetween the years 1970 - 2005 by Country",
x = "Country") +
coord_flip() +
theme_bw() +
theme(axis.text.x=element_text(angle = 45, vjust = 0.5))
l <- "https://www.ncdc.noaa.gov/cag/time-series/global/globe/land_ocean/ytd/12/1880-2016.csv"
tempt <- read_csv(l, skip = 4)
tempt
l <- "https://www.ncdc.noaa.gov/cag/time-series/global/globe/land_ocean/ytd/12/1880-2016.csv"
tempt <- read_csv(l, skip = 4,
col_types = cols(
Year = col_character(),
Value = col_double()
))
tempt
temp %>%
ggvis(~Year, ~Value) %>%
layer_points(size = 0.5) %>%
layer_lines() %>%
add_axis("x", values = seq(1880, 2016, by = 5)) %>%
add_axis("y") %>%
set_options(renderer="canvas")
tempt %>%
ggvis(~Year, ~Value) %>%
layer_points(size = 0.5) %>%
layer_lines() %>%
add_axis("x", values = seq(1880, 2016, by = 5)) %>%
add_axis("y") %>%
set_options(renderer="canvas")
tempt %>%
ggvis(~Year, ~Value) %>%
layer_points(size = 0.5, fillOpacity := 0.2) %>%
layer_lines() %>%
add_axis("x", values = seq(1880, 2016, by = 5)) %>%
add_axis("y") %>%
set_options(renderer="canvas")
tempt %>%
ggvis(~Year, ~Value) %>%
layer_points(size = 0.5, fillOpacity := 0.2) %>%
layer_lines() %>%
add_axis("x", values = seq(1880, 2016, by = 10)) %>%
add_axis("y") %>%
set_options(renderer="canvas")
ghg_complete %>%
filter(!Country == "World") %>%
ggplot() +
geom_bar(mapping = aes(x = Region), na.rm = TRUE) +
theme_bw() +
theme(axis.text.x=element_text(angle = 45, vjust = 0.5))
tempt %>%
ggplot(aes(x = Year, y = Value)) +
geom_point(size = 2, shape = 21) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
theme_bw() +
tempt %>%
ggplot(aes(x = Year, y = Value)) +
geom_point(size = 2, shape = 21) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
theme_bw()
tempt %>%
ggplot(aes(x = Year, y = Value, group = Value)) +
geom_point(size = 2, shape = 21) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
theme_bw()
tempt %>%
ggplot(aes(x = Year, y = Value)) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
theme_bw()
tempt %>%
ggplot(aes(x = Year, y = Value)) +
geom_point(size = 2, shape = 21) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
theme_bw()
tempt %>%
ggplot(aes(x = Year, y = Value, group = 1)) +
geom_point(size = 2, shape = 21) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
theme_bw()
tempt %>%
ggplot(aes(x = Year, y = Value, group = 1)) +
geom_point(size = 1, shape = 21) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
theme_bw()
tempt %>%
ggplot(aes(x = Year, y = Value, group = 1)) +
geom_point(size = 1) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
theme_bw()
tempt %>%
ggplot(aes(x = Year, y = Value, group = 1)) +
geom_point(size = 1, alpha = 0.2) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
theme_bw()
tempt %>%
ggplot(aes(x = Year, y = Value, group = 1)) +
geom_point(size = 1, alpha = 0.5) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
theme_bw()
tempt %>%
ggplot(aes(x = Year, y = Value, group = 1)) +
geom_point(size = 1, alpha = 0.5) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
geom_hline(y-intercept = 0, color = "red")
tempt %>%
ggplot(aes(x = Year, y = Value, group = 1)) +
geom_point(size = 1, alpha = 0.5) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
geom_hline(intercept = 0, color = "red")
tempt %>%
ggplot(aes(x = Year, y = Value, group = 1)) +
geom_point(size = 1, alpha = 0.5) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
geom_hline(yintercept = 0, color = "red")
theme_bw()
tempt %>%
ggplot(aes(x = Year, y = Value, group = 1)) +
geom_point(size = 1, alpha = 0.5) +
geom_line() +
labs(title = "Global temperature over time",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
geom_hline(yintercept = 0, color = "red") +
theme_bw()
tempt %>%
ggplot(aes(x = Year, y = Value, group = 1)) +
geom_point(size = 1, alpha = 0.5) +
geom_line() +
labs(title = "Global temperature over time",
subtitle = "Land and sea temperature anomaly relative to 20th century avg.",
caption = "Data source: National Oceanic and Atmospheric Administration"
y = "Temperature (C)" ) +
tempt %>%
ggplot(aes(x = Year, y = Value, group = 1)) +
geom_point(size = 1, alpha = 0.5) +
geom_line() +
labs(title = "Global temperature over time",
subtitle = "Land and sea temperature anomaly relative to 20th century avg.",
caption = "Data source: National Oceanic and Atmospheric Administration",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
geom_hline(yintercept = 0, color = "red") +
theme_bw()
ghg_complete %>%
filter(!Country == "World") %>%
ggplot() +
geom_bar(mapping = aes(x = IncomeGroup), na.rm = TRUE) +
theme_bw()
ghg_complete %>%
filter(!Country == "World") %>%
ggplot() +
geom_bar(mapping = aes(x = Region), na.rm = TRUE) +
theme_bw() +
theme(axis.text.x=element_text(angle = 45, vjust = 0.5))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(plotly)
library(forcats)
library(ggvis)
library(leaflet)
library(WDI)
library(sp)
# Define numeric vector bins to add some color
bins = ggplot2:::breaks(c(min(countries_plus_ghg$EN.ATM.GHGT.KT.CE, na.rm = TRUE)
,max(countries_plus_ghg$EN.ATM.GHGT.KT.CE, na.rm = TRUE)),"width",n = 5)
# Call colorBin to generate a palette function that maps the RColorBrewer
#"YlOrRd" colors to our bins.
pal <- colorBin("YlOrRd", domain = countries_plus_ghg$EN.ATM.GHGT.KT.CE, bins = bins)
# Generate the labels with some HTML
labels <- sprintf(
"<strong>%s</strong><br/>%g",
countries_plus_ghg$country, countries_plus_ghg$EN.ATM.GHGT.KT.CE
) %>% lapply(htmltools::HTML)
# Generate interactive map
m = leaflet(countries_plus_ghg) %>%
setView(0, 20, zoom = 2) %>%
addTiles()
m %>% addPolygons(
fillColor = ~pal(countries_plus_ghg[["EN.ATM.GHGT.KT.CE"]]),
weight = 1,
opacity = 1,
color = "white",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = countries_plus_ghg[["EN.ATM.GHGT.KT.CE"]], opacity = 0.7, title = NULL,
position = "bottomleft")
# Define numeric vector bins to add some color
bins = ggplot2:::breaks(c(min(countries_plus_ghg$EN.ATM.GHGT.KT.CE, na.rm = TRUE)
,max(countries_plus_ghg$EN.ATM.GHGT.KT.CE, na.rm = TRUE)),"width",n = 5)
# Call colorBin to generate a palette function that maps the RColorBrewer
#"YlOrRd" colors to our bins.
pal <- colorBin("YlOrRd", domain = countries_plus_ghg$EN.ATM.GHGT.KT.CE, bins = bins)
# Generate the labels with some HTML
labels <- sprintf(
"<strong>%s</strong><br/>%g",
countries_plus_ghg$country, countries_plus_ghg$EN.ATM.GHGT.KT.CE
) %>% lapply(htmltools::HTML)
# Generate interactive map
m = leaflet(countries) %>%
setView(0, 20, zoom = 2) %>%
addTiles()
m %>% addPolygons(
fillColor = ~pal(countries_plus_ghg[["EN.ATM.GHGT.KT.CE"]]),
weight = 1,
opacity = 1,
color = "white",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = countries_plus_ghg[["EN.ATM.GHGT.KT.CE"]], opacity = 0.7, title = NULL,
position = "bottomleft")
shiny::runApp('Courses/EDA/ghg/greenhouse-gas')
runApp('Courses/EDA/ghg/greenhouse-gas')
runApp('Courses/EDA/ghg/greenhouse-gas')
shiny::runApp('Courses/EDA/ghg/App')
runApp('Courses/EDA/ghg/App')
shiny::runApp('Courses/EDA/ghg/greenhouse-gas')
runApp('Courses/EDA/ghg/greenhouse-gas')
update.packages()
shiny::runApp('Courses/EDA/ghg/greenhouse-gas')
runApp('Courses/EDA/ghg/greenhouse-gas')
runApp('Courses/EDA/ghg/greenhouse-gas')
library(rgdal)
setRepositories()
install.packages("rgdal")
install.packages("rgdal")
library(rgdal)
shiny::runApp('Courses/EDA/ghg/greenhouse-gas')
runApp('Courses/EDA/ghg/greenhouse-gas')
library(rgdal)
logo <- system.file("pictures/Rlogo.jpg", package="rgdal")[1]
x <- GDAL.open(logo)
opar <- par(no.readonly=TRUE)
par(mfrow=c(2,2))
displayDataset(x, band=1, reset.par=FALSE)
displayDataset(x, band=2, reset.par=FALSE)
displayDataset(x, band=3, reset.par=TRUE)
par(opar)
dx <- RGB2PCT(x, band=1:3)
displayDataset(dx)
GDAL.close(x)
GDAL.close(dx)
shiny::runApp('Courses/EDA/ghg/greenhouse-gas')
setwd("~/Courses/Tableau course")
setwd("~/Courses")
setwd("~/Courses/tableau_course/tableau_project")
setwd("~/Courses/tableau_course/tableau_project")
knitr::opts_chunk$set(
echo = TRUE
)
library(tidyverse)
movies <- read_csv("movies.csv")
movies
movies_genres <- movies %>%
select(id, imdb_id, genres, release_year)
movies_genres
movies_genres <- movies %>%
select(id, imdb_id, original_title, genres, release_year)
movies_genres
movies_genres <- movies %>%
select(id, imdb_id, original_title, genres, release_year)
movies_genres
movies_genres <- movies %>%
select(id, original_title, genres, release_year)
movies_genres
movies_genres <- movies %>%
select(id, original_title, genres, release_year) %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"), sep = "|")
movies_genres
movies_genres <- movies %>%
select(id, original_title, genres, release_year) %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"))
movies_genres
movies_genres <- movies %>%
select(id, original_title, genres, release_year)
movies_genres
movies_genres <- movies %>%
select(id, original_title, genres, release_year) %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"), sep = "|")
movies_genres
?separate
movies_genres <- movies %>%
select(id, original_title, genres, release_year) %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"),
sep = "|", extra = merge)
movies_genres <- movies %>%
select(id, original_title, genres, release_year) %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"),
sep = "|", extra = drop)
movies_genres <- movies %>%
select(id, original_title, genres, release_year) %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"),
sep = "|")
movies_genres
movies_genres <- movies %>%
select(id, original_title, genres, release_year) %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"))
movies_genres
movies_genres <- movies %>%
select(id, original_title, genres, release_year)
movies_genres
?separate
movies_genres %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"))
movies_genres %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"), sep = "|")
movies_genres %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"), sep = "\|")
library(tidyverse)
library(stringr)
movies_genres %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"), sep = "\|")
movies_genres %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"), sep = "|", extra = "drop")
movies_genres %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"), sep = "|", extra = drop)
movies_genres %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"), sep = "|", extra = "merge")
movies_genres %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"), extra = "merge")
movies_genres %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"), extra = "drop")
movies_genres %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"), sep = "|", extra = "drop")
df <- tibble(
x = 1:4,
y = c("Action|Adventure|Science Fiction|Thriller",
"Adventure|Science Fiction|Thriller",
"Action|Crime|Thriller",
"Family|Animation|Adventure|Comedy|Action")
)
df <- tibble(
x = 1:4,
y = c("Action|Adventure|Science Fiction|Thriller",
"Adventure|Science Fiction|Thriller",
"Action|Crime|Thriller",
"Family|Animation|Adventure|Comedy|Action")
)
df
df <- tibble(
x = 1:4,
genres = c("Action|Adventure|Science Fiction|Thriller",
"Adventure|Science Fiction|Thriller",
"Action|Crime|Thriller",
"Family|Animation|Adventure|Comedy|Action")
)
df
df <- tibble(
id = 1:4,
genres = c("Action|Adventure|Science Fiction|Thriller",
"Adventure|Science Fiction|Thriller",
"Action|Crime|Thriller",
"Family|Animation|Adventure|Comedy|Action")
)
df
df %>% separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"), sep = "|")
df2 <- tibble(
id <-  1:4,
genre1 <- c("Action", "Adventure", "Action", "Family", NA),
genre2 <- c("Adventure", "Science", "Crime", "Animation", NA),
genre3 <- c("Action", "Crime", "Thriller", NA),
genre4 <- c("Family", "Animation", "Adventure", "Comedy", "Action"),
)
df2 <- tibble(
id <-  1:4,
genre1 <- c("Action", "Adventure", "Action", "Family", NA),
genre2 <- c("Adventure", "Science", "Crime", "Animation", NA),
genre3 <- c("Action", "Crime", "Thriller", NA, NA),
genre4 <- c("Family", "Animation", "Adventure", "Comedy", "Action"),
)
df2 <- tibble(
id <-  1:4,
genre1 <- c("Action", "Adventure", "Action", "Family"),
genre2 <- c("Adventure", "Science Fiction", "Crime", "Animation"),
genre3 <- c("Science Fiction", "Thriller", "Thriller", "Adventure"),
genre4 <- c("Thriller", "Thriller", NA, "Comedy"),
genre5 <- c(NA, NA, NA, NA, "Action")
)
df2 <- tibble(
id <-  1:4,
genre1 <- c("Action", "Adventure", "Action", "Family"),
genre2 <- c("Adventure", "Science Fiction", "Crime", "Animation"),
genre3 <- c("Science Fiction", "Thriller", "Thriller", "Adventure"),
genre4 <- c("Thriller", "Thriller", NA, "Comedy"),
genre5 <- c(NA, NA, NA, NA, "Action")
)
df %>%
separate(genres, into = c("genre1", "genre2", "genre3", "genre4", "genre5"), sep = "|")
library(tidyverse)
library(stringr)
movies <- read_csv("movies.csv")
movies
View(movies)
movies_genres %>%
separate(genres, into = paste0("genre", 1:5), sep = "\\|")
df %>%
separate(genres, into = paste0("genre", 1:5), sep = "\\|")
movies_novels <- movies %>%
select(id, original_title, keywords)
movies_novels
movies_novels %>%
mutate(based_on_novel = str_detect(keywords, "novel"))
movies_novels
movies_novels %>%
mutate(based_on_novel = str_detect(keywords, "novel$"))
movies_novels
movies_novels <- movies %>%
select(id, original_title, keywords)
movies_novels
movies_novels <- movies %>%
select(id, original_title, tagline, keywords)
movies_novels
str_view(movies_novels$keywords, "novel")
movies_novels$keywords
