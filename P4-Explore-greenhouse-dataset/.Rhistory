p10
top_twenty_emitters_2012 <- ghg_complete %>%
filter(!Country == "World" & Year == 2012) %>%
select(Country, Year, Emissions) %>%
arrange(desc(Emissions)) %>%
do(head(.,20))
p11 <- ggplot(top_twenty_emitters_2012,
aes(x = reorder(Country, Emissions),
y = Emissions)) +
geom_bar(stat = "identity") +
labs(title = "Top 20 contributors to global warming in 2012",
x = "Country",
y = "Emissions (kt of CO2 equivalent)")  +
coord_flip() +
theme_bw() +
theme(axis.text.x=element_text(vjust = 0.5))
ggplotly(p11)
years_to_match_China_emission <- ghg_complete %>%
filter(!Country == "World" & Year == 2012) %>%
select(Country, Year, Emissions) %>%
arrange(desc(Emissions)) %>%
mutate(years_to_match_China = round(Emissions[[1]]/Emissions))
years_to_match_China_emission
p12 <- years_to_match_China_emission %>%
do(head(.,20)) %>%
ggplot(aes(x = reorder(Country, -years_to_match_China),
y = years_to_match_China)) +
geom_bar(stat = "identity") +
labs(title = "Years it would take for countries to match China's emissions in 2012",
x = "Country",
y = "Years to match China")  +
geom_text(aes(label=years_to_match_China), hjust = -0.5) +
coord_flip() +
theme_bw() +
theme(axis.text.x=element_text(vjust = 0.5))
p12
p13 <- years_to_match_China_emission %>%
filter(!is.na(years_to_match_China)) %>%
do(tail(.,20)) %>%
ggplot(aes(x = reorder(Country, -years_to_match_China),
y = years_to_match_China)) +
geom_bar(stat = "identity") +
labs(title = "Years it would take for countries to match China's emissions in 2012",
x = "Country",
y = "Years to match China")  +
geom_text(aes(label=years_to_match_China), hjust = -0.03) +
coord_flip() +
theme_bw() +
theme(axis.text.x=element_text(vjust = 0.5))
p13
p14 <- ghg_complete %>%
filter(Country %in% c("China" ,"United States", "India", "Brazil", "Russian Federation")) %>%
ggplot(aes(x = Year, y = Emissions,
group = Country, colour =fct_reorder2(Country, Year, Emissions) )) +
geom_point(size = 1.5, alpha = 0.5) +
geom_line() +
labs(title = "Historical greenhouse gas emissions",
subtitle = "Countries with highest cumulative emissions between 1970 - 2012",
caption = "Data source: World Bank",
y = "Emissions (kt of CO2 equivalent)" ) +
scale_x_discrete(breaks = seq(1970, 2012, by = 5)) +
theme_bw() +
theme(legend.title = element_blank()) +
scale_color_brewer(palette = "Set1")
p14
wb_pop <- WDI(country = "all",
indicator = "SP.POP.TOTL",
start = 1970,
end = 2012,
extra = TRUE)
wb_pop <- wb_pop %>%
select(SP.POP.TOTL, year, iso3c)
wb_pop$iso3c <- as.character(wb_pop$iso3c)
wb_pop$year <- as.character(wb_pop$year)
wb_pop
ghg_per_capita <- ghg_complete %>%
filter(!Country == "World") %>%
inner_join(wb_pop, by = c("ISO_A3" = "iso3c", "Year" = "year")) %>%
mutate(emissions_tonnes_per_capita = round(Emissions*1000/SP.POP.TOTL, 1)) %>%
select(Country, Year, Emissions, SP.POP.TOTL, emissions_tonnes_per_capita, everything())
ghg_per_capita
p15 <- ghg_per_capita %>%
filter(Year == 2012) %>%
select(Country, emissions_tonnes_per_capita) %>%
arrange(desc(emissions_tonnes_per_capita)) %>%
do(head(.,20)) %>%
ggplot(aes(x = reorder(Country, emissions_tonnes_per_capita),
y = emissions_tonnes_per_capita)) +
geom_bar(stat = "identity") +
labs(title = "Countries with highest greenhouse gas emissions per capita in 2012",
x = "Country",
y = "Emissions per capita (tonnes of CO2 equivalent)")  +
geom_text(aes(label=emissions_tonnes_per_capita), hjust = -0.01) +
coord_flip() +
theme_bw() +
theme(axis.text.x=element_text(vjust = 0.5))
p15
p16 <- ghg_per_capita %>%
filter(Country %in% c("China" ,"United States", "India", "Brazil", "Russian Federation")) %>%
ggvis(~Year, ~emissions_tonnes_per_capita, stroke = ~Country) %>%
layer_points(size = 1, fill = ~Country, fillOpacity := 0.2) %>%
layer_lines() %>%
add_axis("x", values = seq(1970, 2012, by = 5)) %>%
add_axis("y", title = "Emissions per capita (tonnes of CO2 equivalent)", title_offset = 75) %>%
set_options(renderer="canvas")
p16
ghg_per_capita_2012 <- ghg_per_capita %>%
select(emissions_tonnes_per_capita, ISO_A3, Year, Country) %>%
filter(Year == 2012)
# Merge a Spatial object having a data.frame using the three letter country code in each dataset
countries_plus_emissions_per_capita <- sp::merge(countries, ghg_per_capita_2012,
by = "ISO_A3")
names(countries_plus_emissions_per_capita)
# Define numeric vector bins to add some color
bins2 = ggplot2:::breaks(c(min(countries_plus_emissions_per_capita$emissions_tonnes_per_capita, na.rm = TRUE)
,max(countries_plus_emissions_per_capita$emissions_tonnes_per_capita, na.rm = TRUE)),"width",n = 5)
# Call colorBin to generate a palette function that maps the RColorBrewer
#"YlOrRd" colors to our bins.
#pal2 <- colorBin("YlOrRd", domain = countries_plus_emissions_per_capita$emissions_tonnes_per_capita, bins = bins2)
pal2 <- colorQuantile("YlGnBu", domain = countries_plus_emissions_per_capita$emissions_tonnes_per_capita, n = 5)
# Generate the labels with some HTML
labels2 <- sprintf(
"<strong>%s</strong><br/>%g",
countries_plus_emissions_per_capita$Country, countries_plus_emissions_per_capita$emissions_tonnes_per_capita
) %>% lapply(htmltools::HTML)
# Generate interactive map
m2 = leaflet(countries) %>%
setView(0, 20, zoom = 1.5) %>%
addTiles()
p17 <- m2 %>% addPolygons(
fillColor = ~pal2(countries_plus_emissions_per_capita[["emissions_tonnes_per_capita"]]),
weight = 1,
opacity = 1,
color = "white",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 3,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels2,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal2, values = countries_plus_emissions_per_capita[["emissions_tonnes_per_capita"]], opacity = 0.7, title = "Emissions per capita <br/> (tonnes of CO2 equivalent)",
position = "bottomleft")
p17
p1
p2
p14
p12
p17
help(leaflet)
knitr::opts_chunk$set(
echo = TRUE
)
library(tidyverse)
library(ggplot2)
library(plotly)
library(forcats)
library(ggvis)
library(leaflet) # for choropleth map
library(WDI) # for choropleth map
library(sp) # for choropleth map
library(gridExtra)
l <- "https://www.ncdc.noaa.gov/cag/time-series/global/globe/land_ocean/ytd/12/1880-2016.csv"
tempt <- read_csv(l, skip = 4,
col_types = cols(
Year = col_character(),
Value = col_double()
))
tempt
# From http://data.worldbank.org/indicator/EN.ATM.GHGT.KT.CE
# Unzip the downloaded file and stored and inside data folder
ghg <- read_csv("data/API_EN.ATM.GHGT.KT.CE_DS2_en_csv_v2.csv", skip = 4)
ghg_metadata <- read_csv("data/Metadata_Country_API_EN.ATM.GHGT.KT.CE_DS2_en_csv_v2.csv",
col_types = cols(
IncomeGroup = col_factor(levels = NULL),
Region = col_factor(levels = NULL)))
ghg
ghg_metadata
ghg_metadata1 <- ghg_metadata %>%
select(`Country Code`:IncomeGroup) %>%
filter(!(is.na(Region) & `Country Code` != "WLD"))
ghg_metadata1
ghg_complete <- ghg %>%
select(-(`Indicator Name`:`1969`), -(`2013`:X62)) %>%
inner_join(ghg_metadata1, by = "Country Code") %>%
gather(`1970`:`2012`, key = "Year", value = "Emissions") %>%
rename(Country = `Country Name`, ISO_A3 = `Country Code`)
ghg_complete
write_csv(ghg_complete, "wb_ghg_complete.csv")
p1 <- tempt %>%
ggplot(aes(x = Year, y = Value, group = 1)) +
geom_point(size = 1, alpha = 0.5) +
geom_line() +
labs(title = "Global temperature over time",
subtitle = "Land and sea temperature anomaly relative to 20th century avg.",
caption = "Data source: National Oceanic and Atmospheric Administration",
y = "Temperature (C)" ) +
scale_x_discrete(breaks = seq(1880, 2016, by = 10)) +
geom_hline(yintercept = 0, color = "red") +
theme_bw()
ggplotly(p1)
first_and_last <- ghg_complete %>%
filter(Country == "World") %>%
filter(Year == 1970 | Year == 2012)
p2 <- ghg_complete %>%
filter(Country == "World") %>%
ggplot(aes(x = Year, y = Emissions, group = Country)) +
geom_point(size = 1, alpha = 0.5) +
geom_line() +
labs(title = "Total greenhouse gas emissions from earth",
subtitle = "Percentage increase since 1970 - 93.5",
caption = "Data source: World Bank",
y = "Emissions (kt of CO2 equivalent)" ) +
scale_x_discrete(breaks = seq(1970, 2012, by = 5)) +
theme_bw() +
ggrepel::geom_label_repel(aes(label = round(Emissions)), data = first_and_last)
p2
p3 <- ghg_complete %>%
filter(!Country == "World") %>%
group_by(Country) %>%
summarise(Emissions = sum(Emissions, na.rm = TRUE)) %>%
arrange(desc(Emissions)) %>%
do(head(.,20)) %>%
ggplot(aes(x = reorder(Country, Emissions),
y = Emissions)) +
geom_bar(stat = "identity") +
labs(title = "Cumulative greenhouse gas emissions between 1970 - 2012",
x = "Country",
y = "Emissions (kt of CO2 equivalent)")  +
coord_flip() +
theme_bw() +
theme(axis.text.x=element_text(vjust = 0.5))
p3
p4 <- ghg_complete %>%
filter(!is.na(IncomeGroup)) %>%
group_by(IncomeGroup) %>%
summarise(Emissions = sum(Emissions, na.rm = TRUE)) %>%
ggplot(aes(x = reorder(IncomeGroup, Emissions),
y = Emissions)) +
geom_bar(stat = "identity") +
labs(title = "Cumulative greenhouse gas emissions \nbetween the years 1970 - 2012 by IncomeGroup",
x = "IncomeGroup",
y = "Emissions (kt of CO2 equivalent)") +
coord_flip() +
theme_bw() +
theme(axis.text.x=element_text(vjust = 0.5))
p4
p5 <- ghg_complete %>%
filter(!is.na(IncomeGroup)) %>%
group_by(Year, IncomeGroup) %>%
summarise(Emissions = sum(Emissions, na.rm = TRUE)) %>%
ggvis(~Year, ~Emissions, stroke = ~IncomeGroup) %>%
layer_lines() %>%
layer_points(size = 1, fill = ~IncomeGroup, fillOpacity := 0.2) %>%
add_axis("x", values = seq(1970, 2012, by = 5)) %>%
add_axis("y", title = "Emissions (kt of CO2 equivalent)",title_offset = 75)
p5
p6 <- ghg_complete %>%
filter(!is.na(Region)) %>%
group_by(Region) %>%
summarise(Emissions = sum(Emissions, na.rm = TRUE)) %>%
ggplot(aes(x = reorder(Region, Emissions),
y = Emissions)) +
geom_bar(stat = "identity") +
labs(title = "Cumulative greenhouse gas emissions \nbetween the years 1970 - 2005 by Region",
x = "Region",
y = "Emissions (kt of CO2 equivalent)") +
theme_bw() +
theme(axis.text.x=element_text(angle = 45, vjust = 0.5))
p6
p7 <- ghg_complete %>%
filter(!is.na(Region)) %>%
group_by(Year, Region) %>%
summarise(Emissions = sum(Emissions, na.rm = TRUE)) %>%
ggvis(~Year, ~Emissions, stroke = ~Region) %>%
layer_lines() %>%
layer_points(size = 1, fill = ~Region, fillOpacity := 0.2) %>%
add_axis("x", values = seq(1970, 2012, by = 5)) %>%
add_axis("y", title = "Emissions (kt of CO2 equivalent)", title_offset = 75)
p7
p8 <- ghg_complete %>%
filter(!is.na(IncomeGroup)) %>%
ggplot(aes(x = Year, y = Emissions, group = Country)) +
geom_line() +
facet_wrap(~IncomeGroup) +
labs(title = "Greenhouse gas emissions (kt of CO2 equivalent)",
x = NULL,
y = NULL) +
scale_x_discrete(breaks = seq(1970, 2012, by = 5)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
ggplotly(p8)
p9 <- ghg_complete %>%
filter(!is.na(Region)) %>%
ggplot(aes(x = Year, y = Emissions, group = Country)) +
geom_line() +
facet_wrap(~Region) +
labs(title = "Greenhouse gas emissions (kt of CO2 equivalent)",
x = NULL,
y = NULL) +
scale_x_discrete(breaks = seq(1970, 2012, by = 5)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
ggplotly(p9)
url <- "https://raw.githubusercontent.com/datasets/geo-countries/master/data/countries.geojson"
download.file(url, destfile = "data/countries.geojson")
countries <- geojsonio::geojson_read("data/countries.geojson", what = "sp")
#url <- "https://raw.githubusercontent.com/datasets/geo-countries/master/data/countries.geojson"
#countries <- geojsonio::geojson_read(url, method = "local", what = "sp")
class(countries)
names(countries)
wb_ghg <- WDI(country = "all",
indicator = "EN.ATM.GHGT.KT.CE",
start = 2012,
end = 2012,
extra = TRUE)
countries_plus_ghg <- sp::merge(countries, wb_ghg,
by.x = "ISO_A3", by.y = "iso3c")
names(countries_plus_ghg)
# Define numeric vector bins to add some color
bins = ggplot2:::breaks(c(min(countries_plus_ghg$EN.ATM.GHGT.KT.CE, na.rm = TRUE)
,max(countries_plus_ghg$EN.ATM.GHGT.KT.CE, na.rm = TRUE)),"width",n = 5)
# Call colorBin to generate a palette function that maps the RColorBrewer
#"YlOrRd" colors to our bins.
pal <- colorBin("YlGnBu", domain = countries_plus_ghg$EN.ATM.GHGT.KT.CE, bins = bins)
# Generate the labels with some HTML
labels <- sprintf(
"<strong>%s</strong><br/>%g",
countries_plus_ghg$country, countries_plus_ghg$EN.ATM.GHGT.KT.CE
) %>% lapply(htmltools::HTML)
# Generate interactive map
m = leaflet(countries, width = "100%") %>%
setView(0, 20, zoom = 1.5) %>%
addTiles()
p10 <- m %>% addPolygons(
fillColor = ~pal(countries_plus_ghg[["EN.ATM.GHGT.KT.CE"]]),
weight = 1,
opacity = 1,
color = "white",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 3,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = countries_plus_ghg[["EN.ATM.GHGT.KT.CE"]], opacity = 0.7, title = "Emissions (kt of CO2 equivalent)",
position = "bottomleft")
p10
top_twenty_emitters_2012 <- ghg_complete %>%
filter(!Country == "World" & Year == 2012) %>%
select(Country, Year, Emissions) %>%
arrange(desc(Emissions)) %>%
do(head(.,20))
p11 <- ggplot(top_twenty_emitters_2012,
aes(x = reorder(Country, Emissions),
y = Emissions)) +
geom_bar(stat = "identity") +
labs(title = "Top 20 contributors to global warming in 2012",
x = "Country",
y = "Emissions (kt of CO2 equivalent)")  +
coord_flip() +
theme_bw() +
theme(axis.text.x=element_text(vjust = 0.5))
ggplotly(p11)
years_to_match_China_emission <- ghg_complete %>%
filter(!Country == "World" & Year == 2012) %>%
select(Country, Year, Emissions) %>%
arrange(desc(Emissions)) %>%
mutate(years_to_match_China = round(Emissions[[1]]/Emissions))
years_to_match_China_emission
p12 <- years_to_match_China_emission %>%
do(head(.,20)) %>%
ggplot(aes(x = reorder(Country, -years_to_match_China),
y = years_to_match_China)) +
geom_bar(stat = "identity") +
labs(title = "Years it would take for countries to match China's emissions in 2012",
x = "Country",
y = "Years to match China")  +
geom_text(aes(label=years_to_match_China), hjust = -0.5) +
coord_flip() +
theme_bw() +
theme(axis.text.x=element_text(vjust = 0.5))
p12
p13 <- years_to_match_China_emission %>%
filter(!is.na(years_to_match_China)) %>%
do(tail(.,20)) %>%
ggplot(aes(x = reorder(Country, -years_to_match_China),
y = years_to_match_China)) +
geom_bar(stat = "identity") +
labs(title = "Years it would take for countries to match China's emissions in 2012",
x = "Country",
y = "Years to match China")  +
geom_text(aes(label=years_to_match_China), hjust = -0.03) +
coord_flip() +
theme_bw() +
theme(axis.text.x=element_text(vjust = 0.5))
p13
p14 <- ghg_complete %>%
filter(Country %in% c("China" ,"United States", "India", "Brazil", "Russian Federation")) %>%
ggplot(aes(x = Year, y = Emissions,
group = Country, colour =fct_reorder2(Country, Year, Emissions) )) +
geom_point(size = 1.5, alpha = 0.5) +
geom_line() +
labs(title = "Historical greenhouse gas emissions",
subtitle = "Countries with highest cumulative emissions between 1970 - 2012",
caption = "Data source: World Bank",
y = "Emissions (kt of CO2 equivalent)" ) +
scale_x_discrete(breaks = seq(1970, 2012, by = 5)) +
theme_bw() +
theme(legend.title = element_blank()) +
scale_color_brewer(palette = "Set1")
p14
wb_pop <- WDI(country = "all",
indicator = "SP.POP.TOTL",
start = 1970,
end = 2012,
extra = TRUE)
wb_pop <- wb_pop %>%
select(SP.POP.TOTL, year, iso3c)
wb_pop$iso3c <- as.character(wb_pop$iso3c)
wb_pop$year <- as.character(wb_pop$year)
wb_pop
ghg_per_capita <- ghg_complete %>%
filter(!Country == "World") %>%
inner_join(wb_pop, by = c("ISO_A3" = "iso3c", "Year" = "year")) %>%
mutate(emissions_tonnes_per_capita = round(Emissions*1000/SP.POP.TOTL, 1)) %>%
select(Country, Year, Emissions, SP.POP.TOTL, emissions_tonnes_per_capita, everything())
ghg_per_capita
p15 <- ghg_per_capita %>%
filter(Year == 2012) %>%
select(Country, emissions_tonnes_per_capita) %>%
arrange(desc(emissions_tonnes_per_capita)) %>%
do(head(.,20)) %>%
ggplot(aes(x = reorder(Country, emissions_tonnes_per_capita),
y = emissions_tonnes_per_capita)) +
geom_bar(stat = "identity") +
labs(title = "Countries with highest greenhouse gas emissions per capita in 2012",
x = "Country",
y = "Emissions per capita (tonnes of CO2 equivalent)")  +
geom_text(aes(label=emissions_tonnes_per_capita), hjust = -0.01) +
coord_flip() +
theme_bw() +
theme(axis.text.x=element_text(vjust = 0.5))
p15
p16 <- ghg_per_capita %>%
filter(Country %in% c("China" ,"United States", "India", "Brazil", "Russian Federation")) %>%
ggvis(~Year, ~emissions_tonnes_per_capita, stroke = ~Country) %>%
layer_points(size = 1, fill = ~Country, fillOpacity := 0.2) %>%
layer_lines() %>%
add_axis("x", values = seq(1970, 2012, by = 5)) %>%
add_axis("y", title = "Emissions per capita (tonnes of CO2 equivalent)", title_offset = 75) %>%
set_options(renderer="canvas")
p16
ghg_per_capita_2012 <- ghg_per_capita %>%
select(emissions_tonnes_per_capita, ISO_A3, Year, Country) %>%
filter(Year == 2012)
# Merge a Spatial object having a data.frame using the three letter country code in each dataset
countries_plus_emissions_per_capita <- sp::merge(countries, ghg_per_capita_2012,
by = "ISO_A3")
names(countries_plus_emissions_per_capita)
# Define numeric vector bins to add some color
bins2 = ggplot2:::breaks(c(min(countries_plus_emissions_per_capita$emissions_tonnes_per_capita, na.rm = TRUE)
,max(countries_plus_emissions_per_capita$emissions_tonnes_per_capita, na.rm = TRUE)),"width",n = 5)
# Call colorBin to generate a palette function that maps the RColorBrewer
#"YlOrRd" colors to our bins.
#pal2 <- colorBin("YlOrRd", domain = countries_plus_emissions_per_capita$emissions_tonnes_per_capita, bins = bins2)
pal2 <- colorQuantile("YlGnBu", domain = countries_plus_emissions_per_capita$emissions_tonnes_per_capita, n = 5)
# Generate the labels with some HTML
labels2 <- sprintf(
"<strong>%s</strong><br/>%g",
countries_plus_emissions_per_capita$Country, countries_plus_emissions_per_capita$emissions_tonnes_per_capita
) %>% lapply(htmltools::HTML)
# Generate interactive map
m2 = leaflet(countries, width = "100%") %>%
setView(0, 20, zoom = 1.5) %>%
addTiles()
p17 <- m2 %>% addPolygons(
fillColor = ~pal2(countries_plus_emissions_per_capita[["emissions_tonnes_per_capita"]]),
weight = 1,
opacity = 1,
color = "white",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 3,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels2,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal2, values = countries_plus_emissions_per_capita[["emissions_tonnes_per_capita"]], opacity = 0.7, title = "Emissions per capita <br/> (tonnes of CO2 equivalent)",
position = "bottomleft")
p17
p1
p2
p14
p12
p17
